<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lisao的博客</title>
  <subtitle>丶Lisao</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://mlisao.github.io/"/>
  <updated>2016-08-21T16:10:24.220Z</updated>
  <id>http://mlisao.github.io/</id>
  
  <author>
    <name>Lisao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>AccountManager简介与使用</title>
    <link href="http://mlisao.github.io/2016/08/21/AccountManager%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>http://mlisao.github.io/2016/08/21/AccountManager简介与使用/</id>
    <published>2016-08-21T06:11:44.000Z</published>
    <updated>2016-08-21T16:10:24.220Z</updated>
    
    <content type="html">&lt;p&gt;&amp;emsp;&amp;emsp;关于账号存储的处理，每个不同的APP都有着不同的处理方式。最为常见的就是使用数据库作为账号管理。使用本地SQLite存储账号的用户名，头像，Token等关于账号的一系列信息。但是，因为数据存储在本地，或许有心术不正的人获取到本地存储的数据库信息(当然了，本地存储的数据库是很容易拿到的)，就能够拿到账号的所有信息。信息就这样泄漏了。&lt;br&gt;&lt;br&gt;&amp;emsp;&amp;emsp;另外一种比较安全的方法就是使用Android系统提供的AccountManager存储账号相关信息。So,google一下发现，国内似乎好像很少有关于这个类的介绍，只查到了一篇翻译国外的一篇文章。所有我想把AccountManager的介绍以及如何使用AccountManager,还有使用过程中需要注意的地方。&lt;br&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;附：&lt;a href=&quot;http://kohoh1992.github.io/AndroidAccountsGuide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;(翻译) Android Accounts Api使用指南&lt;/a&gt;&lt;br&gt;&lt;br&gt;下边就先介绍一下相关的类  &lt;/p&gt;
&lt;h4 id=&quot;1-Accout介绍&quot;&gt;&lt;a href=&quot;#1-Accout介绍&quot; class=&quot;headerlink&quot; title=&quot;1.Accout介绍&quot;&gt;&lt;/a&gt;1.Accout介绍&lt;/h4&gt;&lt;p&gt;Accont其实就是我们需要添加的账号，里边只有两个字段。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String type;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;其中name表示该账户的用户名，当然了，有很多应用它的用户名是隐藏的，你也可以把它作为昵称来看待。type则代表账户的类型，这个是type必须是独一无二的，当然了，如果说你的两个应用使用的是同一个账户管理体系，这个是可以相同的。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Account&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String name, String type)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (TextUtils.isEmpty(name)) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;string&quot;&gt;&quot;the name must not be empty: &quot;&lt;/span&gt; + name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (TextUtils.isEmpty(type)) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;string&quot;&gt;&quot;the type must not be empty: &quot;&lt;/span&gt; + type);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.type = type;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;通过传递name和type完成对Account的创建。这个时候可能会疑问，不是说好的存储呢token呢，还有头像的信息，还有其他一些数据呢？其实，本身Account的本身是不存储这样的东西的，如果想存储关于账号的其他数据，需要通过&lt;code&gt;AccountManager.addAccountExplicitly(account, password, userData)&lt;/code&gt;的方式来添加用户的附加信息的。其中userData是一个Bundle类型的数据，通过&lt;code&gt;bundle.put(key,object)&lt;/code&gt;的方式添加用户所需要的附加数据。关于AccountManager的介绍及常用方法，接下来会详细讲解。&lt;/p&gt;
&lt;h4 id=&quot;2-AccountManager介绍&quot;&gt;&lt;a href=&quot;#2-AccountManager介绍&quot; class=&quot;headerlink&quot; title=&quot;2.AccountManager介绍&quot;&gt;&lt;/a&gt;2.AccountManager介绍&lt;/h4&gt;&lt;p&gt;关于AccountManager类，Android官方的开发文档是这么介绍的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This class provides access to a centralized registry of the user’s online accounts. The user enters credentials (username and password) once per account, granting applications access to online resources with “one-click” approval.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;简单的来翻译一下吧&lt;br&gt;&lt;br&gt;&amp;emsp;&amp;emsp;这个类提供了访问用户的网上帐户的统一的管理。每个用户只需要要输入一次凭据（用户名和密码），一键式的授予应用程序访问网络资源。（英语不好，如有错误，请指正）。&lt;br&gt;&lt;br&gt;通俗的来说，可以使用这个类来完成对账号的增、删、改、查。&lt;br&gt;&lt;/p&gt;
&lt;h4 id=&quot;3-添加一个账户信息&quot;&gt;&lt;a href=&quot;#3-添加一个账户信息&quot; class=&quot;headerlink&quot; title=&quot;3.添加一个账户信息&quot;&gt;&lt;/a&gt;3.添加一个账户信息&lt;/h4&gt;&lt;p&gt;&amp;emsp;&amp;emsp;刚才上文中也已经提到了，就是使用&lt;code&gt;AccountManager.addAccountExplicitly(account, password, userData)&lt;/code&gt;的方式进行添加的。看一下这个方法的源码。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; IAccountManager mService;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//省略中间部分代码&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addAccountExplicitly&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Account account, String password, Bundle userdata)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (account == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;string&quot;&gt;&quot;account is null&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mService.addAccountExplicitly(account, password, userdata);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (RemoteException e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;// Can happen if there was a SecurityException was thrown.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RuntimeException(e);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;其中&lt;code&gt;IAccountManager&lt;/code&gt;是一个aidl接口类，不难猜测出其中的具体添加账户的服务由Android系统底层服务添加，很抱歉，我在翻阅了大量的资料后，并没有找到相关的源码。不过，通过这样一个方法就可以添加一个账户进入系统的账户。&lt;br&gt;&lt;/p&gt;
&lt;h4 id=&quot;4-删除一个账户&quot;&gt;&lt;a href=&quot;#4-删除一个账户&quot; class=&quot;headerlink&quot; title=&quot;4.删除一个账户&quot;&gt;&lt;/a&gt;4.删除一个账户&lt;/h4&gt;&lt;p&gt;&amp;emsp;&amp;emsp;删除账户有对应的方法在API21前后略有不同，在API21以前采用的是&lt;code&gt;removeAccount(Account account, AccountManagerCallback&amp;lt;Boolean&amp;gt; callback, Handler handler)&lt;/code&gt;，而在API21之后则改成了&lt;code&gt;removeAccount(Account account, Activity activity, AccountManagerCallback&amp;lt;Bundle&amp;gt; callback, Handler handler)&lt;/code&gt;，另外还有一个方法是&lt;code&gt;removeAccountExplicitly(Account account)&lt;/code&gt;&lt;br&gt;&amp;emsp;&amp;emsp;其中前两个是异步方式进行的，最后一个方法看官网的方法描述&lt;code&gt;Removes an account directly.（直接删除账户）&lt;/code&gt;(目前我使用的是API22以前异步的方法，其他的两个方法暂时未进行测试，欢迎各路大神测试吐槽)。&lt;br&gt;&lt;br&gt;关于三个参数介绍:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Account&lt;/code&gt;:表示带移除的账户，看源码之后发现，当account传入&lt;code&gt;null&lt;/code&gt;的时候，会抛出一个异常，所以要确保出传入的account不能为null&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AccountManagerCallback&amp;lt;Boolean&amp;gt;&lt;/code&gt;:表示移除完成后的回调，通过&lt;code&gt;future.getResult()&lt;/code&gt;获取回调的返回结果&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Handler&lt;/code&gt;:对应回调的线程，当然了，如果你传入为&lt;code&gt;null&lt;/code&gt;的话，他的默认回调线程则是为主线程&lt;br&gt;对于这个方法，我是这样使用的。&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;removeCurrentAccount&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  Account account = getCurrentAccount();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (account == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  manager.removeAccount(account, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AccountManagerCallback&amp;lt;Boolean&amp;gt;() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(AccountManagerFuture&amp;lt;Boolean&amp;gt; future)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              Logger.i(&lt;span class=&quot;string&quot;&gt;&quot;移除账号&quot;&lt;/span&gt; + future.getResult());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &lt;span class=&quot;comment&quot;&gt;//send EventBus or BroaderCast or RxBus&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              RxBus.getDefault().send(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AccountSignStatus(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (OperationCanceledException e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (AuthenticatorException e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;以上两个是比较基础的添加和删除账号信息，剩下的获取账号信息的部分还有修改账号用户名（昵称）我将会用超长的篇幅类介绍和使用关于这些方法的相信使用，因为这些方法是相对来说调用比较频繁的，特别是获取账户信息的方法，同时，在使用这些方法时，我遇到的坑还是相当多的。而同时，在获取账号token也是整个账户管理的核心，同时也是最复杂的。  &lt;/p&gt;
&lt;h4 id=&quot;5-获取用户token信息及用户数据&quot;&gt;&lt;a href=&quot;#5-获取用户token信息及用户数据&quot; class=&quot;headerlink&quot; title=&quot;5.获取用户token信息及用户数据&quot;&gt;&lt;/a&gt;5.获取用户token信息及用户数据&lt;/h4&gt;&lt;p&gt;先简单介绍一下获取token的流程,下面是关于获取账户token的流程示意图&lt;br&gt;&lt;img src=&quot;http://kohoh1992.github.io/image/201407250905.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这看起来似乎是一团乱麻，但是其实相当的简单。我会解释一下当我们第一次在设备上用一个账号登入时出现的情况。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一次登陆&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;app向AccountManager请求一个AuthToken。&lt;/li&gt;
&lt;li&gt;AccountManager询问相关的AccountAuthenticiator是否有缓存的AuthToken。&lt;/li&gt;
&lt;li&gt;因为没有缓存的AuthToken（还没有登入），AccountManager为我们开启一个AccountAuthenticatorActivity，引导用户登入。&lt;/li&gt;
&lt;li&gt;用户成功登陆，AuthToken从服务端返回。&lt;/li&gt;
&lt;li&gt;Accountmanager将AuthToken缓存起来以便于将来使用。&lt;/li&gt;
&lt;li&gt;app获得她请求的AuthToken.&lt;/li&gt;
&lt;li&gt;众人皆喜！&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果用户已经登入，那么我们就会在第二步时获得AuthToken。(摘抄&lt;a href=&quot;http://kohoh1992.github.io/AndroidAccountsGuide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;(翻译) Android Accounts Api使用指南&lt;/a&gt;原文)&lt;br&gt;看起来是很复杂的事情，不过我会一步一步来解释并实现这样的一个过程。&lt;/p&gt;
&lt;p&gt;####第一步 创建属于自己的账号服务&lt;br&gt;首先我需要编写出一个&lt;code&gt;Authenticator&lt;/code&gt;认证器的类，让这个类继承&lt;code&gt;AbstractAccountAuthenticator&lt;/code&gt;,并实现其中的方法。具体的实现会在接下来进行介绍。&lt;br&gt;然后创建一个服务类，并在mainifist如下代码所示&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * Created by lisao on 2016/3/19.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AccountService&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Service&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Authenticator authenticator;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        authenticator = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Authenticator(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Nullable&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; IBinder &lt;span class=&quot;title&quot;&gt;onBind&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Intent intent)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; authenticator.getIBinder();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第三步，在res文件夹下创建xml文件夹，并添加&lt;code&gt;authenticator.xml&lt;/code&gt;文件&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;account-authenticator&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;xmlns:android&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:accountType&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;定义的唯一账户类型，建议使用公司域名，如果你贵司有多个产品并共享一套数据库的话&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:icon&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@mipmap/ic_launcher&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:label&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@string/app_name&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:smallIcon&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@mipmap/ic_launcher&quot;&lt;/span&gt; /&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后配置mainifest清单文件中添加&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--用户认证 service--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;service&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;.account.AccountService&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:enabled&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:exported&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android.accounts.AccountAuthenticator&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta-data&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android.accounts.AccountAuthenticator&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;android:resource&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@xml/authenticator&quot;&lt;/span&gt; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;service&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;经过以上的几个步骤，运行APP就可以在Android的设置界面点击添加账户看到定义的账号名称了。类似于这样。（补充一点，某系机型可能看不到，例如说某米，某族等）&lt;br&gt;&lt;img src=&quot;http://kohoh1992.github.io/image/201407250835.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;OK，上文也提到了，会对实现的&lt;code&gt;Authenticator&lt;/code&gt;进行详解。其实我们主要关注的就是其中的两个方法，一个是&lt;code&gt;addAccount(AccountAuthenticatorResponse response, String accountType, String authTokenType, String[] requiredFeatures, Bundle options)&lt;/code&gt;,另外一个就是&lt;code&gt;getAuthToken(final AccountAuthenticatorResponse response, final Account account, String authTokenType, Bundle options)&lt;/code&gt;第一个是在设置界面点击添加账户是跳转到登录页的方法，另外一个就是使用&lt;code&gt;AccountManager.getAuthToken&lt;/code&gt;调用的方法。&lt;br&gt;对于addAccount方法我的实现是这样的&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Bundle &lt;span class=&quot;title&quot;&gt;addAccount&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(AccountAuthenticatorResponse response, String accountType, String authTokenType, String[] requiredFeatures, Bundle options)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; NetworkErrorException &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Intent intent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Intent(mContext, SignActivity.class);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    intent.putExtra(SignActivity.ARG_ACCOUNT_TYPE, accountType);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    intent.putExtra(SignActivity.ARG_AUTH_TYPE, authTokenType);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    intent.putExtra(SignActivity.ARG_IS_ADDING_NEW_ACCOUNT, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    intent.putExtra(AccountManager.KEY_ACCOUNT_AUTHENTICATOR_RESPONSE, response);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Bundle bundle = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Bundle();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    bundle.putParcelable(AccountManager.KEY_INTENT, intent);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bundle;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;SignAcitiviy需要继承AccountAuthenticatorActivity，当然了如果你项目中与BaseActivity的时候，你讲AccountAuthenticatorActivity中的相关变量和方法复制到SignAcitiviy也是可以的。 具体的SignAcitivity实现请参考本文头部提到的原文&lt;br&gt;对于getAuthToken我的实现是这样的&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Bundle &lt;span class=&quot;title&quot;&gt;getAuthToken&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; AccountAuthenticatorResponse response, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Account account, String authTokenType, Bundle options)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; NetworkErrorException &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    String authToken = AccountUtil.peekAuthToken(account, authTokenType);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (TextUtils.isEmpty(authToken)) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String password = AccountUtil.getPassword(account);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (password != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//使用账户密码进行登录&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!TextUtils.isEmpty(authToken)) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Bundle result = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Bundle();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        result.putString(AccountManager.KEY_ACCOUNT_NAME, account.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        result.putString(AccountManager.KEY_ACCOUNT_TYPE, account.type);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        result.putString(AccountManager.KEY_AUTHTOKEN, authToken);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Intent intent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Intent(mContext, SignActivity.class);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    intent.putExtra(AccountManager.KEY_ACCOUNT_AUTHENTICATOR_RESPONSE, response);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Bundle bundle = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Bundle();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    bundle.putParcelable(AccountManager.KEY_INTENT, intent);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bundle;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Ok，经过以上的代码编写，你可以使用&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;AccountManager.getAuthToken(Account account, String authTokenType, Bundle options, Activity activity, AccountManagerCallback&amp;lt;Bundle&amp;gt; callback, Handler handler)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;和&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;AccountManager.getAuthTokenByFeatures(String accountType, String authTokenType, String[] features, Activity activity, Bundle addAccountOptions, Bundle getAuthTokenOptions, AccountManagerCallback&amp;lt;Bundle&amp;gt; callback, Handler handler)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;两个方法了(妈蛋!需要传递这么多的参数，到底鬼什么意思?)&lt;br&gt;先来介绍一下&lt;code&gt;getAuthToken&lt;/code&gt;这个方法.&lt;br&gt;根据官方文档的解释&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;Gets an auth token of the specified type for a particular account, prompting the user for credentials if necessary. This method is intended for applications running in the foreground where it makes sense to ask the user directly for a password.&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;If a previously generated auth token is cached for this account and type, then it is returned. Otherwise, if a saved password is available, it is sent to the server to generate a new auth token. Otherwise, the user is prompted to enter a password.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;官方文档的解释也印证了上边提到的当获取&lt;code&gt;AuthToken&lt;/code&gt;的流程(如果忘记了，请返回上文仔细观看)。实际上这也是在&lt;code&gt;Authenticator&lt;/code&gt;中&lt;code&gt;getAuthToken&lt;/code&gt;的流程逻辑。&lt;/p&gt;
&lt;p&gt;最后解释一下传递参数的详细解释&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;参数名称&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;参数释义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;account&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;需指定的账户&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;authTokenType&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;账号token的类别，不是账号的类别并且不可以为null&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;options&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;身份认证专用的请求选项可以为null&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;activity&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;不解释&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;callback&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;调用完成时的回调，如果为null则不回掉&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;handle&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;回调的线程，如果传null则回调为主线程&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;接下来介绍一下&lt;code&gt;getAuthTokenByFeatures&lt;/code&gt;这个方法。还是先看一下官方文档&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This method gets a list of the accounts matching the specified type and feature set; if there is exactly one, it is used; if there are more than one, the user is prompted to pick one; if there are none, the user is prompted to add one. Finally, an auth token is acquired for the chosen account.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;翻译一下就是，这个方法会根据传递的账户类型匹配是否有该类型的账户，如果恰好有一个，则返回改账户的token，如果有多个，则弹出一个对话框让你选择一个，如果没有，会让你新建一个指定类型的账户,最后返回这个账户的token。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其实toke的获取流程还是和&lt;code&gt;getAuthToken&lt;/code&gt;的流程相同。唯一的一点区别在于&lt;code&gt;getAuthToken&lt;/code&gt;需要传递的是一个已知的账户，而&lt;code&gt;getAuthTokenByFeatures&lt;/code&gt;传递的是一个账户类型，由系统帮我们选定账户。&lt;/strong&gt;&lt;br&gt;最后还是列举一下传递参数的意思&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;参数名称&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;参数释义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;accountType&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;账户类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;authTokenType&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;账户token类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;features&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;该账户需要授权的功能，可以为null&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;activity&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;不解释&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;addAccountOptions&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;身份认证专用的请求选项可以为null 用于添加账户时使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;getAuthTokenOptions&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;身份认证专用的请求选项可以为null 用于获取账户时使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;callback&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;调用完成时的回调，如果为null则不回掉&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;handle&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;回调的线程，如果传null则回调为主线程&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;上述就是获取账户信息Token的常用方法。下面就来介绍一下获取账户数据的方法，就是像获取用户头像信息等。&lt;/p&gt;
&lt;p&gt;获取用户数据比较上来说就简单多了。直接调用&lt;code&gt;manager.getUserData(Account account, String key)&lt;/code&gt;就可以了。这个方法是同步获取的，相比上述获取token的方式简单太多了。参数释义太简单了不再一一赘述。&lt;/p&gt;
&lt;h4 id=&quot;6-更改用户信息&quot;&gt;&lt;a href=&quot;#6-更改用户信息&quot; class=&quot;headerlink&quot; title=&quot;6.更改用户信息&quot;&gt;&lt;/a&gt;6.更改用户信息&lt;/h4&gt;&lt;p&gt;先解释最简单吧，修改用户数据，也就是修改用户的头像信息这些东西了。调用&lt;code&gt;manager.setUserData(Account account, String key，String value);&lt;/code&gt;就可以了。具体参数释义不解释了。&lt;br&gt;其实最坑的一点就是修改账号的昵称（用户名）。闲话不多说，先上代码。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AccountCallBack&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String msg)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;renameAccount&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String newName, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; AccountCallBack callback)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (TextUtils.isEmpty(getCurrentAccountToken())) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.LOLLIPOP) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        manager.renameAccount(getCurrentAccount(), newName, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AccountManagerCallback&amp;lt;Account&amp;gt;() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(AccountManagerFuture&amp;lt;Account&amp;gt; future)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (future.getResult().name.equals(newName)) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        callback.done();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        callback.error(&lt;span class=&quot;string&quot;&gt;&quot;昵称修改失败,请稍后重试&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (OperationCanceledException e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    callback.error(&lt;span class=&quot;string&quot;&gt;&quot;昵称修改失败,请稍后重试&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    callback.error(&lt;span class=&quot;string&quot;&gt;&quot;昵称修改失败,请稍后重试&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (AuthenticatorException e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    callback.error(&lt;span class=&quot;string&quot;&gt;&quot;昵称修改失败,请稍后重试&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        String avatar = manager.getUserData(getCurrentAccount(), ACCOUNT_AVATAR);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        String joinTime = manager.getUserData(getCurrentAccount(), ACCOUNT_JOIN_TIME);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        String mobile = manager.getUserData(getCurrentAccount(), ACCOUNT_MOBILE);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        String userId = manager.getUserData(getCurrentAccount(), ACCOUNT_USER_ID);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String password = manager.getPassword(getCurrentAccount());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String token = getCurrentAccountToken();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Bundle bundle = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Bundle();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        bundle.putString(ACCOUNT_AVATAR, avatar);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        bundle.putString(ACCOUNT_JOIN_TIME, joinTime);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        bundle.putString(ACCOUNT_MOBILE, mobile);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        bundle.putString(ACCOUNT_USER_ID, userId);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        manager.removeAccount(getCurrentAccount(), &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AccountManagerCallback&amp;lt;Boolean&amp;gt;() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(AccountManagerFuture&amp;lt;Boolean&amp;gt; future)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (future.getResult()) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        addAccountExplicitly(newName, password, bundle);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        setAuthToken(getCurrentAccount(), AUTH_TOKEN_TYPE_FULL_ACCESS, token);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        callback.done();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        callback.error(&lt;span class=&quot;string&quot;&gt;&quot;昵称修改失败,请稍后重试&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (OperationCanceledException e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    callback.error(&lt;span class=&quot;string&quot;&gt;&quot;昵称修改失败,请稍后重试&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    callback.error(&lt;span class=&quot;string&quot;&gt;&quot;昵称修改失败,请稍后重试&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (AuthenticatorException e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    callback.error(&lt;span class=&quot;string&quot;&gt;&quot;昵称修改失败,请稍后重试&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;代码的逻辑解释一下，当在API21之后使用&lt;code&gt;manager.renameAccount&lt;/code&gt;的方法直接重名昵称（用户名），在API21之前，先把用户数据存储下来，移除账户后添加一个新名字的账户。（目前我是这么做的，希望有更好的方法大神指点）&lt;br&gt;这么做会遇到一个问题，就是当新名字和旧的名字是相同的时候。出现一个奇怪的现象，&lt;strong&gt;重命名成功后，账户列表不显示账户，并且这个账号永久性的添加不成功，只有当卸载APP之后才可以。&lt;/strong&gt;所有目前的做法是如果是相同昵称，直接返回重命名成功就好了。&lt;/p&gt;
&lt;h4 id=&quot;7-总结需要注意的几点。&quot;&gt;&lt;a href=&quot;#7-总结需要注意的几点。&quot; class=&quot;headerlink&quot; title=&quot;7.总结需要注意的几点。&quot;&gt;&lt;/a&gt;7.总结需要注意的几点。&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;不同的账户体系，accounttype千万不要相同。&lt;/li&gt;
&lt;li&gt;在AccountManager存储token的时候也是以明文进行存储的，保险起见，加一下密。&lt;/li&gt;
&lt;li&gt;注意重命名昵称的时候不要和旧名字相同。&lt;/li&gt;
&lt;li&gt;关于账号数据服务器返回数据的能存的尽量存下来，以备后续版本可能会用到。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;关于这篇介绍AccountManager，因为本人水平有限，在介绍的时候难免会有错误，欢迎各路大神指正。&lt;/p&gt;
&lt;p&gt;Created By Lisao&lt;br&gt;2016-8-22&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;关于账号存储的处理，每个不同的APP都有着不同的处理方式。最为常见的就是使用数据库作为账号管理。使用本地SQLite存储账号的用户名，头像，Token等关于账号的一系列信息。但是，因为数据存储在本地，或许有心术不正的人获取到本地存储的数据库信息(当然了，本地存储的数据库是很容易拿到的)，就能够拿到账号的所有信息。信息就这样泄漏了。&lt;br/&gt;&lt;br&gt;&amp;emsp;&amp;emsp;另外一种比较安全的方法就是使用Android系统提供的AccountManager存储账号相关信息。So,google一下发现，国内似乎好像很少有关于这个类的介绍，只查到了一篇翻译国外的一篇文章。所有我想把AccountManager的介绍以及如何使用AccountManager,还有使用过程中需要注意的地方。&lt;br/&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://mlisao.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法总结</title>
    <link href="http://mlisao.github.io/2016/07/17/Markdown%E8%AF%AD%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>http://mlisao.github.io/2016/07/17/Markdown语法总结/</id>
    <published>2016-07-16T16:38:44.000Z</published>
    <updated>2016-07-17T04:03:33.445Z</updated>
    
    <content type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Markdown 是一种轻量级标记语言，创始人为约翰·格鲁伯（John Gruber）。它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML(或者HTML)文档”。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;语法总结&quot;&gt;&lt;a href=&quot;#语法总结&quot; class=&quot;headerlink&quot; title=&quot;语法总结&quot;&gt;&lt;/a&gt;语法总结&lt;/h2&gt;&lt;h3 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h3&gt;&lt;p&gt;这是最为常用的格式，在平时常用的的文本编辑器中大多是这样实现的：输入文本、选中文本、设置标题格式。&lt;br&gt;而在 Markdown 中，你只需要在文本前面加上 &lt;code&gt;#&lt;/code&gt;即可，同理、你还可以增加二级标题、三级标题、四级标题、五级标题和六级标题，总共六级，只需要增加 &lt;code&gt;#&lt;/code&gt; 即可，标题字号相应降低&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;# 一级标题&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;## 二级标题&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;### 三级标题&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;#### 四级标题&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;##### 五级标题&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;###### 六级标题&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;引用&quot;&gt;&lt;a href=&quot;#引用&quot; class=&quot;headerlink&quot; title=&quot;引用&quot;&gt;&lt;/a&gt;引用&lt;/h3&gt;&lt;p&gt;在我们写作的时候经常需要引用他人的文字，这个时候引用这个格式就很有必要了，在 Markdown 中，你只需要在你希望引用的文字前面加上 &lt;code&gt;&amp;gt;&lt;/code&gt;就可以了&lt;br&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;quote&quot;&gt;&amp;gt; 这句话是引用的内容。&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;列表&quot;&gt;&lt;a href=&quot;#列表&quot; class=&quot;headerlink&quot; title=&quot;列表&quot;&gt;&lt;/a&gt;列表&lt;/h3&gt;&lt;p&gt;列表格式也很常用，在 Markdown 中，你只需要在文字前面加上 &lt;code&gt;-&lt;/code&gt; 就可以了&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;- &lt;/span&gt;列表1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;- &lt;/span&gt;列表2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果你希望有序列表，也可以在文字前面加上&lt;code&gt;1. 2. 3.&lt;/code&gt; 就可以了&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;1. &lt;/span&gt;列表1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;2. &lt;/span&gt;列表2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;链接与图片&quot;&gt;&lt;a href=&quot;#链接与图片&quot; class=&quot;headerlink&quot; title=&quot;链接与图片&quot;&gt;&lt;/a&gt;链接与图片&lt;/h3&gt;&lt;p&gt;在 Markdown 中，插入链接不需要其他按钮，你只需要使用 &lt;code&gt;[显示文本](链接地址)&lt;/code&gt; 这样的语法即可&lt;br&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;quote&quot;&gt;&amp;gt; [Lisao的博客](http://mlisao.github.io)&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上述代码看起来的效果就是这样的&lt;a href=&quot;http://mlisao.github.io&quot;&gt;Lisao的博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果想在文章中加入图片的只需要&lt;code&gt;![](图片地址)&lt;/code&gt;就可以了,可以看到与加入链接的格式基本相同，有一点区别就是在加入链接的&lt;code&gt;[]&lt;/code&gt;前加入&lt;code&gt;!&lt;/code&gt;即可&lt;br&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;![](http://img.51ztzj.com/upload/image/20150707/dn201507066008_670x419.jpg)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上述代码看起来的效果如下&lt;br&gt;&lt;img src=&quot;http://img.51ztzj.com/upload/image/20150707/dn201507066008_670x419.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;表格&quot;&gt;&lt;a href=&quot;#表格&quot; class=&quot;headerlink&quot; title=&quot;表格&quot;&gt;&lt;/a&gt;表格&lt;/h3&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;| Header One     | Header Two     |&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;| :------------- | :------------- |&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;| Item One       | Item Two       |&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;看起来的效果&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Header One&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Header Two&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Item One&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Item Two&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;更多&quot;&gt;&lt;a href=&quot;#更多&quot; class=&quot;headerlink&quot; title=&quot;更多&quot;&gt;&lt;/a&gt;更多&lt;/h3&gt;&lt;p&gt;上述列举了普通常用的几种语法，更多详细语法请参考 &lt;a href=&quot;http://wowubuntu.com/markdown/#precode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown 语法说明&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Markdown 是一种轻量级标记语言，创始人为约翰·格鲁伯（John Gruber）。它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML(或者HTML)文档”。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。&lt;br&gt;
    
    </summary>
    
    
      <category term="Markdown" scheme="http://mlisao.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://mlisao.github.io/2016/07/16/hello-world/"/>
    <id>http://mlisao.github.io/2016/07/16/hello-world/</id>
    <published>2016-07-16T04:10:24.119Z</published>
    <updated>2016-07-17T04:12:25.043Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;br&gt;&lt;!-- More --&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo server&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo generate&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo deploy&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
